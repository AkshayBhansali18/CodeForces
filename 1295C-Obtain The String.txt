import java.util.*;
import java.lang.*;
import java.io.*;
public class sol
{
    public static void main (String[] args)throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
       int t=Integer.parseInt(br.readLine());
   outer:    for(int u=0;u<t;u++)
       {
           String str=br.readLine();
           String str1=br.readLine();
            int arr[][]=new int[str.length()+1][str1.length()+1];
            for(int i=0;i<str.length()+1;i++)
            {
                arr[i][0]=0;
            }
            for(int i=0;i<str.length()+1;i++)
            {
                for(int j=1;j<str1.length()+1;j++)
                {
                    arr[i][j]=-10;
                }
            }
          int val= calculate(str,str1,str.length(),str1.length(),str.length(),arr);
          if(val<-100000)
              System.out.println(-1);
          else
              System.out.println(val);
        }
    }
    static int calculate(String s,String t,int m, int n,int m_orig,int dp[][])
    {


        if(n==0)
            return 1;
        if(!s.contains(String.valueOf(t.charAt(n-1))))
            return -999999999;
         if(m==0)
        {
            if(dp[m_orig][n]>0)
                return dp[m_orig][n];
            else
                dp[m_orig][n]=1+calculate(s,t,m_orig,n,m_orig,dp);
            return dp[m_orig][n];

        }
       else if(s.charAt(m-1)==t.charAt(n-1))
        {
           if(dp[m-1][n-1]>0)
               return dp[m-1][n-1];
           else
               dp[m-1][n-1]=calculate(s,t,m-1,n-1,m_orig,dp);
           return dp[m-1][n-1];
        }
//        else if(s.charAt(m-1)!=t.charAt(n-1))
        else
        {
            if(dp[m-1][n]>0)
                return dp[m-1][n];
            else
                dp[m-1][n]=calculate(s,t,m-1,n,m_orig,dp);
            return dp[m-1][n];
        }




    }
}